@using JobPortal.Data.Models;
@using JobPortal.Sevices.Data.Interfaces;
@using JobPortal.Web.Infrastructure.Extensions;
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject IEmployerService EmployerService
@inject IUserService UserService

@{
    var isUserEmployer = await EmployerService.EmployerExistsByUserIdAsync(this.User.GetId()!);
    var userFullName = await UserService.GetFullNameByEmailAsync(User.Identity?.Name!);
}


<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <a class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello, @userFullName</a>
    </li>
    @if (!isUserEmployer)
    {
        <li class="nav-item">
            <a class="nav-link" asp-controller="Employer" asp-action="Become">Become Employer</a>
        </li>
    }
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link" asp-area="" asp-controller="User" asp-action="Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" asp-area="" asp-controller="User" asp-action="Login">Login</a>
    </li>
}
</ul>
